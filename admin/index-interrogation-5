
	WITH sys_index_physical_stats AS (
		SELECT	[object_id],
				index_id,
				pages					= SUM(page_count),
				page_fragmentation		= CASE WHEN MAX(index_type_desc) <> 'HEAP' THEN SUM(ROUND(avg_fragmentation_in_percent, 2)) ELSE NULL END
		FROM sys.dm_db_index_physical_stats(DB_ID(), NULL, NULL , NULL, 'SAMPLED')
		GROUP BY [object_id], index_id)
		
	SELECT	'ALTER INDEX ' + QUOTENAME(IX.name) + ' ON ' + QUOTENAME(SI.[schema]) + '.' + QUOTENAME(SI.[table_name]) + ' REBUILD WITH (ONLINE=ON)' + CHAR(13) + CHAR(10) + 'GO',
			[Table] = SI.[schema] + '.' + SI.[table_name],
			[Index] = IX.[name],
			[Type] = SI.[Type],
			[Pages] = ISNULL(REPLACE(CONVERT(VARCHAR(20), (CAST(FR.[pages] AS MONEY)), 1), '.00', ''), '-'),
			[Page Splits] = ISNULL(REPLACE(CONVERT(VARCHAR(20), (CAST(DOS.[leaf_allocation_count] AS MONEY)), 1), '.00', ''), '-'),
			[Fragmentation] = FR.[page_fragmentation]
		FROM [sys].[indexes] AS IX
			INNER JOIN [sys].[objects] AS O ON IX.[object_id] = O.[object_id]
			LEFT OUTER JOIN sys_index_physical_stats AS FR ON FR.[object_id] = IX.[object_id] 
				AND fr.[index_id] = ix.[index_id]
			LEFT OUTER JOIN (		
					SELECT	O.[object_id],
							I.[index_id],
							[Type] = CAST(	CASE	WHEN I.index_id = 1				THEN 'clustered'
													WHEN I.index_id = 0				THEN 'heap' ELSE 'nonclustered' END + 
											CASE	WHEN I.[ignore_dup_key] <> 0		THEN ', ignore duplicate keys' ELSE '' END +
											CASE	WHEN I.is_unique <> 0				THEN ', unique' ELSE '' END +
											CASE	WHEN I.is_primary_key <> 0		THEN ', primary key' ELSE '' END +
											CASE	WHEN I.has_filter = 1				THEN ', filtered' ELSE '' END +
											CASE	WHEN I.[type] = 6				THEN ', columnstore' ELSE '' END  AS VARCHAR(210)),
							[table_name] = O.[Name],
							[schema] = SC.[Name]
					FROM sys.indexes AS I
						INNER JOIN sys.objects AS O ON O.[object_id] = I.[object_id]
						INNER JOIN sys.schemas AS SC ON O.[schema_id] = SC.[schema_id]
					WHERE O.[type] IN ('U','V')) AS SI ON O.[object_id] = SI.[object_id] AND IX.[index_id] = SI.[index_id]
			LEFT OUTER JOIN (
					SELECT	[object_id],
							[index_id],
							[leaf_allocation_count]
					FROM sys.dm_db_index_operational_stats(DB_ID(), NULL, NULL, NULL)) AS DOS ON DOS.index_id = IX.index_id AND DOS.[object_id] = IX.[object_id]
		WHERE O.is_ms_shipped = 0
			AND O.[type] IN ('U','V')
			AND ((FR.page_fragmentation > 29 AND FR.pages > 24) OR (DOS.leaf_allocation_count > 100 AND FR.pages > 24))
			AND IX.[name] IS NOT NULL
		ORDER BY FR.pages DESC, FR.page_fragmentation DESC;
